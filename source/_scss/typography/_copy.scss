/* -------------------------------------------------- */
/* FONT FAMILIES
/* -------------------------------------------------- */

h1, h2, h3, h4, h5, h6, .headline {
	font: $headline;
}

.subheadline {
	font: $subheadline;
}

.copy, p {
	font: $copy;
}

.font-stack {
	font: $font-stack;
}

.font-icon {
	font: $font-icon;
}


/* -------------------------------------------------- */
/* TYPE
/* -------------------------------------------------- */	

h, .h {

	@each $name, $font-size in $font-sizes {

		&#{$name} {
			margin: {
				top: 0;
				bottom: $headline-margin;
			}
			font-size: pxtorem($font-size);
			line-height: $headline-line-height;
			/*line-height: round( pxtoem($font-size / 2 * 0.5, $basepx) );*/
		}

	}

}

p {
	margin: 0;
	padding: 0;
	font-size: 1em;
	letter-spacing: $copy-letter-spacing;
	line-height: $copy-line-height;
	white-space: pre-line;
}

.p {

	@each $name, $font-size in $font-sizes {

		&#{$name} {
			font-size: pxtoem($font-size / 2);
		}

	}

}

.fluid-type {
	@include fluid-type( map-get($font-sizes, 6) / 2, map-get($font-sizes, 1) );
}


/* -------------------------------------------------- */
/* LOGIC
/* -------------------------------------------------- */	

h1, h2, h3, h4, h5, h6, .headline:not([class*='text-left']):not([class*='text-right']):not([class*='text-center']):not([class*='text-justify']) {

	@include break($min: 0, $max: $mobile, $orientation: 'portrait') {
		text-align: $headline-alignment-on-mobile;
	}

}

p, .text-column {

	@include break($min: 0, $max: $mobile, $orientation: 'portrait') {
		text-align: $copy-alignment-on-mobile;
	}

}
